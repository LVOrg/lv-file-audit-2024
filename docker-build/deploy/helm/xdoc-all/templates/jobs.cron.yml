---
{{ $info := $.Values.name -}}
    {{ $dataFile := join "" (list "data/" $info ".yml") -}}

    {{ $data := .Files.Get $dataFile | fromYaml -}}

    {{ $storage_files := $data.storage_files -}}
      {{ $fileJob := $data.fileJob -}}
      {{ $db := $data.config.db -}}
      {{ $es := $data.config.elastic_search -}}
      {{ $rb := $data.config.rabbitmq -}}
      {{ $api := $data.webApi -}}
      {{ $storage := $data.storage -}}
  {{ $globalVar := .Files.Get "global/data.yml" | fromYaml -}}

  {{ $jobsList:= fromYaml ((include "jobs-apps-data" $globalVar ))  -}}
---
{{ if not $api}}
---
{{if $jobsList.crons }}
---
{{- range $key, $value := $jobsList.crons }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{$value.name}}
  namespace: {{$fileJob.namespace}}
  annotations:
    description: {{$value.description | default "..." }}
spec:
  template:
    spec:
      volumes:
        - name: {{$storage.name}}
        {{if hasKey  $storage "className"}}
        persistentVolumeClaim:
          claimName: {{$storage.name}}
        {{else}}
        nfs:
          server: {{$storage.server}}
          path: {{$storage.directory}}
        {{end}}
        {{ if $storage_files }}
        - name: {{$storage_files.name}}
          nfs:
            server: {{$storage_files.server}}
            path: {{$storage_files.directory}}
        {{end}}
      containers:
        - args:
            - python3
            - /app/cy_consumers/{{$value.endpoint}}
            - elastic_search.server=$(elastic_search.server)
            - elastic_search.prefix_index=$(elastic_search.prefix_index)
            - db=$(db)
            - admin_db_name=$(admin_db_name)
            - temp_directory=./brokers/tmp-files
            - rabbitmq.server=$(rabbitmq.server)
            - rabbitmq.port=$(rabbitmq.port)
            - rabbitmq.msg=$(rabbitmq.msg)
            - tika_server=$(tika_server)
            - host_url=$(web_api_url)
            - file_storage_path=/mnt/files
            {{if not $storage_files}}
            - services=""
            {{end}}
          image: {{$value.image}}
          envFrom:
            - configMapRef:
                name: {{$fileJob.configMapName}}

          name: files-{{$value.name}}
          imagePullPolicy: IfNotPresent

          volumeMounts:
            - mountPath: {{$fileJob.mountPath}}
              name: {{$storage.name}}
            {{ if $storage_files }}
            - mountPath: /mnt/files
              name: {{$storage_files.name}}
            {{end}}
      restartPolicy: Never
  backoffLimit: 4
{{- end}}
{{end}}
{{end}}